openapi: 3.0.0
paths:
  /api/products:
    get:
      operationId: productFindAll
      parameters:
        - name: filter
          required: true
          in: query
          description: 'Filter products by fields (e.g., { name: "Product" })'
          schema:
            $ref: '#/components/schemas/Object'
        - name: sort
          required: true
          in: query
          description: Sort by field and direction (e.g., name:ASC)
          schema:
            example: name:ASC
            type: string
        - name: limit
          required: true
          in: query
          description: Limit the number of items per page
          schema:
            minimum: 1
            example: 10
            type: number
        - name: page
          required: true
          in: query
          description: Page number
          schema:
            minimum: 1
            example: 1
            type: number
      responses:
        '200':
          description: Return a list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      summary: Get all products
      tags:
        - products
    post:
      operationId: productCreate
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateProductDto'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      summary: Create a new product
      tags:
        - products
  /api/products/{id}:
    get:
      operationId: productFindOne
      parameters:
        - name: id
          required: true
          in: path
          description: Product ID
          schema:
            type: number
      responses:
        '200':
          description: Return a product by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      summary: Get a single product by ID
      tags:
        - products
    patch:
      operationId: productUpdate
      parameters:
        - name: id
          required: true
          in: path
          description: Product ID
          schema:
            type: number
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProductDto'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      summary: Update an existing product
      tags:
        - products
    delete:
      operationId: productRemove
      parameters:
        - name: id
          required: true
          in: path
          description: Product ID
          schema:
            type: number
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      summary: Delete a product by ID
      tags:
        - products
info:
  title: Документация
  description: Документация к запросам
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    Object:
      type: object
      properties: {}
    Product:
      type: object
      properties:
        id:
          type: number
          example: 1
          description: Unique identifier of the product
        name:
          type: string
          example: Product Name
          description: Name of the product
          maxLength: 255
        description:
          type: string
          example: Description of the product
          description: Description of the product
        price:
          type: number
          example: 100
          description: Price of the product
          minimum: 0
        discount:
          type: object
          example: 90
          description: Discounted for price of the product
          minimum: 0
          nullable: true
        sku:
          type: string
          example: '12345'
          description: SKU of the product
          maxLength: 100
        photoFileName:
          type: object
          example: http://example.com/photo.jpg
          description: URL of the product photo
          nullable: true
        updatedAt:
          format: date-time
          type: string
          description: Update product date
          example: '2023-10-01T12:00:00Z'
        createdAt:
          format: date-time
          type: string
          description: Create product date
          example: '2023-10-01T12:00:00Z'
      required:
        - id
        - name
        - description
        - price
        - discount
        - sku
        - photoFileName
        - updatedAt
        - createdAt
    CreateProductDto:
      type: object
      properties:
        name:
          type: object
          example: Product Name
          description: Name of the product
          maxLength: 255
        description:
          type: object
          example: Description of the product
          description: Description of the product
        price:
          type: object
          example: 100
          description: Price of the product
          minimum: 0
        discount:
          type: object
          example: 90
          description: Discounted price of the product
          minimum: 0
        sku:
          type: object
          example: '12345'
          description: SKU of the product
          maxLength: 100
        image:
          type: string
          format: binary
      required:
        - name
        - description
        - price
        - sku
    UpdateProductDto:
      type: object
      properties:
        name:
          type: object
          example: Product Name
          description: Name of the product
          maxLength: 255
        description:
          type: object
          example: Description of the product
          description: Description of the product
        price:
          type: object
          example: 100
          description: Price of the product
          minimum: 0
        discount:
          type: object
          example: 90
          description: Discounted price of the product
          minimum: 0
        sku:
          type: object
          example: '12345'
          description: SKU of the product
          maxLength: 100
        image:
          type: string
          format: binary
